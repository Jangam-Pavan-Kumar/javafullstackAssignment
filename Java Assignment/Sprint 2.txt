package service;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


import bean.Product;

public class ProductService implements Serializable{
	
	private static final long serialVersionUID = -4048523558536427746L;
		ArrayList<Product> ll=new ArrayList<Product>();
		FileOutputStream fosd;
		ObjectOutputStream oos;
		Product p;
		
		
		
		public int addproduct(int id,String Pname,int price) throws Exception {
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
		   if(flag==0)		
				{
					try {
						p=new Product(id,Pname,price);
						ll.add(p);
						fosd =new FileOutputStream("product1.txt",true);
						oos=new ObjectOutputStream(fosd);
						oos.writeObject(p);
					} catch (Exception e) {
				
						System.err.println(e.toString());
					}
					return 0;
				}
		   else
		     {
			   return 1;
		   
			}
			
		}
		public int update(int id,int price) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
				 flag=1;
				 p.setPrice(price);
				 fosd =new FileOutputStream("product1.txt",true);
				 oos=new ObjectOutputStream(fosd);
				 oos.writeObject(p);
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)		
				{
					
					return 1;
				}
			else
				return 0;
		}
		public int delete(int id) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
					int x=ll.indexOf(p);
					ll.remove(x);
					fosd=new FileOutputStream("product1.txt",true);
					oos=new ObjectOutputStream(fosd);
					oos.writeObject(p);
					oos.close();
					fosd.close();
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		public ArrayList<Product> displayall()
		{
			return ll;
		}
		public int retrieve(int id)
		{
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					return p.getPrice();	
				}
			}
			return 0;
		}
		
}


package operation;
import java.awt.List;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Scanner;
import bean.Product;
import service.ProductService;
public class ProductOperation implements Serializable{
	public static void main(String[] args) throws Exception {
		ProductService ps = new ProductService();
		// TODO Auto-generated method stub
		int var;	
		do {
			
			ArrayList<Product> l=new ArrayList<Product>();
			//Product p;
			Scanner sc=new Scanner(System.in);
			System.out.println("1.Add\n2.Update\n3.Delete\n4.DisplayAll\n5.price using id\n6.exit");
			System.out.println("choose one option");
			var=sc.nextInt();
			switch(var) {
			case 1: System.out.println("Enter the product details id");
					int id3=sc.nextInt();
					sc.nextLine();
					System.out.println("Enter te product detail name");
					String pname=sc.nextLine();
					System.out.println("Enter the product details like price");
					int price=sc.nextInt();
					int q=ps.addproduct(id3,pname,price);
					if(q==1)
					{
						System.out.println("you are entering  duplicate id");
					}
					else
					{
						System.out.println("Your product added successfully");
						System.out.println("Object Serialized");
					}
					break;
			case 2: System.out.println("Enter the product id ");
					int id=sc.nextInt();
					System.out.println("Enter the price ");
					int price1=sc.nextInt();
					int b=ps.update(id, price1);
					if(b==1)
					{
						System.out.println("Product updated successfully");
						System.out.println("Object Serialized");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 3: System.out.println("Enter index value of product id to delete");
					int id1=sc.nextInt();
					int c=ps.delete(id1);
					if(c==1)
					{
						System.out.println("product deleted successfully");
						System.out.println("Object Serialized");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 4:System.out.println("products details");
			       l=ps.displayall();
			       try {
			   		FileInputStream fis = new FileInputStream("product1.txt"); 
			   			 ObjectInputStream ois = new ObjectInputStream(fis); 
			   			 Object obj = ois.readObject(); 
			   			 Product p=(Product)obj;
			   			for(Product a:l)
						 {
			   				System.out.println(a.getPid()+","+a.getPname()+","+a.getPrice());
						 }
			   			 System.out.println("Object De-Seriliazed"); 
			   			 ois.close();
			   			 fis.close();
			   			} 
			       catch (Exception e) {
			   		System.err.println(e.toString());
			   		} 
			       break;
			case 5:System.out.println("enter product id to view the price");
			       int id2=sc.nextInt();
			       int d=ps.retrieve(id2);
			       if(d>0)
			       {
			    	   System.out.println("product price is "+d);   
			       }
			       else
			       {
			    	   System.out.println("product not found");
			       }
			       
			       break;
			case 6:System.exit(0);
			
			default: System.out.println("enter valid option");
			       
			
			}
					
		}while(var<=6);
	}
}


package bean;

import java.io.Serializable;

public class Product implements Serializable {
private int pid;
private String pname;
private int price;
public int getPid() {
	return pid;
}
public void setPid(int pid) {
	this.pid = pid;
}
public String getPname() {
	return pname;
}
public void setPname(String pname) {
	this.pname = pname;
}
public int getPrice() {
	return price;
}
public void setPrice(int price) {
	this.price = price;
}
public Product() {
	super();
	// TODO Auto-generated constructor stub
}
public Product(int pid, String pname, int price) {
	super();
	this.pid = pid;
	this.pname = pname;
	this.price = price;
}
@Override
public String toString() {
	return "Product [pid=" + pid + ", pname=" + pname + ", price=" + price + "]";
}


}

